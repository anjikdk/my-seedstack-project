# Put main configuration in this file
# See http://seedstack.org/docs/seed/configuration for more information

logging:
  level: INFO
 
jdbc:
  datasources:
    myDatasource:
      provider: org.seedstack.jdbc.internal.datasource.HikariDataSourceProvider
      url: jdbc:mysql://localhost:3306/test1
      user: root
      password: root
      
jpa:
  units:
    myUnit:
      datasource: myDatasource
      properties:
        hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        hibernate.hbm2ddl.auto: update
        
classes:
  org:
    generated:
      project:
        domain:
          model:
            jpaUnit: myUnit

application:
  # Unique identifier of the application accross your organization
  id: my-web-project
  # Make sure all your application base packages are listed below
  basePackages: [ org.generated.project ]

web:
  server:
    port: 2000

security:
  # The security configuration realm uses the 'users' section below (replace it with a more useful realm later)
  # See http://seedstack.org/docs/seed/manual/security/#realms for more information
  realms: ConfigurationRealm
  users:
    # A default 'demo' user is defined with password 'demo'
    demo: demo
  web:
    # The 'urls' section below in used to secure HTTP requests
    # See http://seedstack.org/docs/seed/manual/security/#http-access-control for more information
    urls:
    #   -
    #     pattern: /api/**
    #     filters: authcBasic

kafka:
  # Configured Kafka streams with the name of the stream as key
  streams:
    stream1:
      # Kafka properties for configuring the stream
      properties:
        property1: value1
  consumers:
    # Configured Kafka consumer with the name of the consumer as key
    consumer1:
      # Kafka properties for configuring the consumer
      properties:
        #client.id: ${env.KAFKA_CLIENT_ID:'mii-core'}-plant-customer-data-response
        group.id: String
        bootstrap.servers: ${env.KAFKA_URL:'localhost:9092'}
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    empConsumer:
      # Kafka properties for configuring the consumer
      properties:
        #client.id: ${env.KAFKA_CLIENT_ID:'mii-core'}-plant-customer-data-response
        group.id: employee
        bootstrap.servers: ${env.KAFKA_URL:'localhost:9092'}
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: org.apache.kafka.connect.json.JsonDeserializer
  producers:
    # Configured Kafka producer with the name of the producer as key
    producer1:
      # Kafka properties for configuring the producer
      properties:
        bootstrap.servers: ${env.KAFKA_URL:'localhost:9092'}
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: org.apache.kafka.common.serialization.StringSerializer
    empProducer:
      # Kafka properties for configuring the producer
      properties:
        bootstrap.servers: ${env.KAFKA_URL:'localhost:9092'}
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: org.apache.kafka.connect.json.JsonSerializer